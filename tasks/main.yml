# akoeb.common/tasks/main.yml
---
    # initial dist upgrade, fail2ban
    - name: Run apt dist upgrade
      apt: upgrade=dist update_cache=yes 

    - name: Install various packages
      apt: 
        name: "{{item}}"
        state: present
      with_items: 
        - sudo
        - fail2ban
        - unattended-upgrades
        - ufw
        - logwatch
        - ntp
        - rsync
        - collectd
        - collectd-utils
    
    # user access
    - name: Make sure the auto user is installed, but cannot login (login only with key)
      user: name={{username}} uid=2000 append=yes groups=sudo password="!" shell="/bin/bash"
    
    - name: make sure the auto user has the ssh key it needs
      authorized_key: 
        user: "{{username}}"
        key: "{{ lookup('file', 'auto.pub') }}" 
        manage_dir: yes 
        state: present 
    
    - name: Disallow password and ChallengeResponse authentication
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^\s*{{item}}Authentication\s*'
        line: "{{item}}Authentication no"
        state: present
      notify: Restart sshd
      with_items:
          - "Password"
          - "ChallengeResponse"
    
    - name: Allow ssh access only to auto user
      lineinfile: 
        dest: /etc/ssh/sshd_config 
        regexp: '^AllowGroups\s*'
        line: "AllowGroups sudo"
        state: present
      notify: Restart sshd
    
    - name: Disallow root SSH access
      lineinfile: 
        dest: /etc/ssh/sshd_config 
        regexp: '^\s*PermitRootLogin\s*'
        line: "PermitRootLogin no"
        state: present
      notify: Restart sshd
    
    - name: Make sure ssh allows PAM
      lineinfile: 
        dest: /etc/ssh/sshd_config 
        regexp: '^\s*UsePAM\s*'
        line: "UsePAM yes"
        state: present
      notify: Restart sshd

    - name: Remove sudo group rights
      lineinfile: dest=/etc/sudoers regexp='^%sudo' state=absent


    - name: make sure the sudoers file allows the auto user sudo without password prompt
      lineinfile:
          dest: '/etc/sudoers.d/sudo_group' 
          regexp: '^%sudo'
          line: '%sudo ALL=(ALL) NOPASSWD:ALL'
          state: 'present'
          owner: 'root'
          group: 'root'
          create: 'yes'
          mode: '0400'

    # see http://docs.ansible.com/ansible/latest/intro_configuration.html#pipelining
    - name: make sure the auto user is not required a tty in suddoers
      lineinfile:
          dest: '/etc/sudoers.d/defaults' 
          regexp: '^Defaults:{{username}}\s*!?requiretty'
          line: 'Defaults:{{username}}        !requiretty'
          state: 'present'
          owner: 'root'
          group: 'root'
          create: 'yes'
          mode: '0400'
      

    - name: deactivate root password
      user: name=root password="!"
    
    
    # unattended upgrades
    - name: Adjust APT update intervals
      copy:
        src: apt_periodic
        dest: /etc/apt/apt.conf.d/10periodic
    
    - name: setup unattended-upgrades
      copy: 
        src: 50unattended-upgrades
        dest: /etc/apt/apt.conf.d/50unattended-upgrades
    
    
    # logwatch
    - name: Make logwatch mail to admin_email daily
      lineinfile:
          dest: /etc/cron.daily/00logwatch
          regexp: "^/usr/sbin/logwatch"
          line: "/usr/sbin/logwatch --output mail --mailto {{admin_email}} --detail high"
          state: present
          create: yes
    
    
    # firewall:
    - name: configure firewall to allow ssh incoming from /etc/ufw/applications.d/openssh-server
      ufw: rule=allow name=OpenSSH state=enabled 
    
    - name: default outgoing firewall policy (drop)
      lineinfile: dest=/etc/default/ufw regexp="^DEFAULT_OUTPUT_POLICY=" line="DEFAULT_OUTPUT_POLICY=DROP" state=present
    
    - name: allow DNS lookups
      ufw: rule="allow" name="DNS" direction=out state=enabled
    
    - name: allow outgoing http traffic for getting system updates
      ufw: rule=allow name="WWW Full" direction=out  state=enabled

      # this is only Hetzner, I guess? TODO: check, feature toggle
      #- name: allow outgoing dhcp requests
      #ufw: rule=allow proto=udp to_ip=109.239.48.251 to_port=67 direction=out state=enabled
    
    - name: allow ntp traffic outbound
      ufw: rule=allow port=123 proto=udp direction=out state=enabled

    - name: set firewall to low logging
      ufw: logging={{ufw_log_level}} 

    - name: Include nullmailer if not mailserver
      include_tasks: nullmailer.yml
      when: "('mailserver' not in role_names) and skip_nullmailer is undefined"

    - name: change hostname
      hostname: name={{hostname}}

    - name: make sure this hostname is in hosts file
      lineinfile:
          dest: /etc/hosts
          insertafter: "^{{item}}"
          line: "{{item}} {{hostname}}"
          state: present
          create: yes
      with_items:
          - "127.0.0.1"
          - "::1"

     # collectd
    - name: upload collectd config
      copy: src=collectd.conf dest=/etc/collectd/collectd.conf owner=root group=root mode=0644 backup=yes
      notify: Restart collectd
     
    - name: create directory for other collectd configs which can be put there later
      file: path=/etc/collectd/others state=directory owner=root group=root mode=0750 
      notify: Restart collectd
      
      
